{"ast":null,"code":"var _jsxFileName = \"/home/jim/my personals as a beginer/luanda react/luanda-react-app/src/components/Logings/Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// function Login({ setUser }) {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   function handleSubmit(e) {\n//     e.preventDefault();\n//     fetch(\"/login\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ username, password }),\n//     }).then((r) => {\n//       if (r.ok) {\n//         r.json().then((user) => setUser(user));\n//       }\n//     });\n//   }\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <h1>Login</h1>\n//         <label htmlFor=\"username\">Username</label>\n//         <input\n//           type=\"text\"\n//           id=\"username\"\n//           autoComplete=\"off\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//         />\n//         <label htmlFor=\"password\">Password</label>\n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           autoComplete=\"current-password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const usernameRef = useRef(null);\n  const passwordRef = useRef(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Accessing values using useRef\n    const username = usernameRef.current.value;\n    const password = passwordRef.current.value;\n\n    // Perform login logic with username and password\n    console.log('Login submitted with:', {\n      username,\n      password\n    });\n\n    // Optionally, you can clear the input fields\n    usernameRef.current.value = '';\n    passwordRef.current.value = '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              className: \"form-label\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"username\",\n              ref: usernameRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"form-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              id: \"password\",\n              ref: passwordRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"JADMUxbcoD3pQqmQ82qhQ7Y8Qik=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Login","_s","usernameRef","passwordRef","handleSubmit","e","preventDefault","username","current","value","password","console","log","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","required","_c","$RefreshReg$"],"sources":["/home/jim/my personals as a beginer/luanda react/luanda-react-app/src/components/Logings/Login.js"],"sourcesContent":["// import React, { useState } from \"react\";\n\n// function Login({ setUser }) {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   function handleSubmit(e) {\n//     e.preventDefault();\n//     fetch(\"/login\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ username, password }),\n//     }).then((r) => {\n//       if (r.ok) {\n//         r.json().then((user) => setUser(user));\n//       }\n//     });\n//   }\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <h1>Login</h1>\n//         <label htmlFor=\"username\">Username</label>\n//         <input\n//           type=\"text\"\n//           id=\"username\"\n//           autoComplete=\"off\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//         />\n//         <label htmlFor=\"password\">Password</label>\n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           autoComplete=\"current-password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\n\nimport React, { useRef } from 'react';\n\nconst Login = () => {\n  const usernameRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Accessing values using useRef\n    const username = usernameRef.current.value;\n    const password = passwordRef.current.value;\n\n    // Perform login logic with username and password\n    console.log('Login submitted with:', { username, password });\n\n    // Optionally, you can clear the input fields\n    usernameRef.current.value = '';\n    passwordRef.current.value = '';\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"mb-3\">\n              <label htmlFor=\"username\" className=\"form-label\">\n                Username\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"username\"\n                ref={usernameRef}\n                required\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"password\" className=\"form-label\">\n                Password\n              </label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"password\"\n                ref={passwordRef}\n                required\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Login\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}